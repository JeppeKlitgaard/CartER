# Poetry
[tool.poetry]
name = "carter"
version = "0.1.0"
description = "Machine Learning of Inverted Pendula"
authors = ["Jeppe Klitgaard <jk782@cam.ac.uk>"]
packages = [
    { include = "commander" }
]

[project]
name = "carter"
version = "0.1.0"
description = "Machine Learning of Inverted Pendula"
authors = ["Jeppe Klitgaard <jk782@cam.ac.uk>"]
requires-python = ">=3.13"
dependencies = [
    "click>=8.2.1",
    "deepmerge>=2.0",
    "ffmpeg-python>=0.2.0",
    "gymnasium>=1.1.1",
    "ipywidgets>=8.1.7",
    "jupyterlab>=4.4.3",
    "jupyterlab-mathjax3>=4.3.0",
    "matplotlib>=3.10.3",
    "mkdocs-video>=1.5.0",
    "numba>=0.61.2",
    "numpy>=2.2.6",
    "pandas>=2.2.3",
    "pettingzoo>=1.25.0",
    "pillow>=11.2.1",
    "pyserial>=3.5",
    "scipy>=1.15.3",
    "seaborn>=0.13.2",
    "snakeviz>=2.2.2",
    "stable-baselines3>=2.6.0",
    "supersuit>=3.10.0",
    "tensorboard>=2.19.0",
    "torchtyping>=0.1.5",
    "tqdm>=4.67.1",
    "yappi>=1.6.10",
]


[tool.poetry.dev-dependencies]
jupytext = "^1.11.3"
black = "^21.6b0"
isort = "^5.9.1"
mypy = "^0.910"

flake8 = "^3.9.2"
line-profiler = "^3.3.0"
poethepoet = "^0.10.0"
mkdocs = "^1.2.2"
mkdocs-material = "^7.2.4"
typing-extensions = "^3.10.0"
py-spy = "^0.3.9"

[tool.poetry.scripts]
carter = "commander.cli:run"

# Mypy
[tool.mypy]
python_version = "3.9"
strict = true
show_error_codes = true

plugins = [
    "numpy.typing.mypy_plugin"
]

disallow_untyped_calls = false


[[tool.mypy.overrides]]
module = [
    "gym.*",
    "numba.*",
    "scipy.*",
    "matplotlib.*",
    "torchvision.*",
    "tensorboard.*",
    "seaborn.*",
    "serial.*",
    "supersuit.*",
    "pettingzoo.*",
    "deepmerge.*",
    "pyglet.*",
    "yappi.*",
    "mkdocs.*",
]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = [
    "torch.*",
    "nptyping.*",
    "stable_baselines3.*"
]
implicit_reexport = true

# Black
[tool.black]
line-length = 100
target-version = ["py39"]

# Isort
[tool.isort]
profile = "black"
skip_gitignore = true
line_length = 100

known_ml = [
    "gym",
    "torch",
    "tensorflow",
    "pettingzoo",
    "supersuit",
]

known_datascience = [
    "numpy",
    "pandas",
]

known_first_party = [
    "commander",
]

sections = [
    "FUTURE",
    "STDLIB",
    "DATASCIENCE",
    "ML",
    "THIRDPARTY",
    "FIRSTPARTY",
    "LOCALFOLDER",
]

# Tasks
[tool.poe.tasks]
flake8 = "flake8 ./commander"
mypy = "mypy ./commander"
black_check = "black --check ."
isort_check = "isort --check-only ."

force-cuda11 = "python -m pip install torch==1.9.1+cu111 torchvision==0.10.1+cu111 torchaudio===0.9.1 -f https://download.pytorch.org/whl/torch_stable.html"

black = "black ."
isort = "isort ."

lint = [
    "flake8",
    "black_check",
    "isort_check",
    "mypy",
]

fix = [
    "black",
    "isort",
]

# Build
[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
